name: Prepare Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

jobs:
  prepare:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package-dir:
          - datametronome/brain/base
          - datametronome/podium
          - datametronome/pulse/core
          - datametronome/pulse/postgres
          - datametronome/pulse/postgres-psycopg3
          - datametronome/pulse/postgres-sqlalchemy
          - datametronome/pulse/sqlite
          - datametronome/ui-streamlit
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine pytest
    
    - name: Build package ${{ matrix.package-dir }}
      working-directory: ${{ matrix.package-dir }}
      run: |
        if [ -f setup.py ]; then
          echo "Building ${{ matrix.package-dir }}"
          python -m build
          echo "‚úÖ Build successful for ${{ matrix.package-dir }}"
        else
          echo "‚ö†Ô∏è No setup.py found in ${{ matrix.package-dir }}, skipping"
        fi
    
    - name: Run tests ${{ matrix.package-dir }}
      working-directory: ${{ matrix.package-dir }}
      run: |
        if [ -f pytest.ini ] || [ -d tests ]; then
          echo "Running tests for ${{ matrix.package-dir }}"
          python -m pytest tests/ -v
        else
          echo "‚ö†Ô∏è No tests found in ${{ matrix.package-dir }}, skipping"
        fi
    
    - name: Create Release Assets
      if: matrix.package-dir == 'datametronome/podium'  # Main package
      run: |
        echo "üì¶ Package ${{ matrix.package-dir }} is ready for release!"
        echo "Tag: ${{ github.ref_name }}"
        echo "Create a GitHub release to publish to PyPI"
