{
	"info": {
		"_postman_id": "datametronome-podium-api-collection",
		"name": "DataMetronome Podium API",
		"description": "Complete API collection for DataMetronome Podium - Data Observability Platform Backend API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "datametronome-podium"
	},
	"item": [
		{
			"name": "Root & Health",
			"item": [
				{
					"name": "Root Endpoint",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": ["{{base_url}}"],
							"path": [""]
						},
						"description": "Get API information and version details"
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": ["{{base_url}}"],
							"path": ["health"]
						},
						"description": "Check API health status"
					},
					"response": []
				}
			],
			"description": "Basic API information and health check endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "login"]
						},
						"description": "Authenticate user and get access token"
					},
					"response": []
				},
				{
					"name": "User Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"securepassword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/register",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "register"]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Get Current User Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/me",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "auth", "me"]
						},
						"description": "Get current authenticated user information"
					},
					"response": []
				}
			],
			"description": "Authentication and user management endpoints"
		},
		{
			"name": "Data Sources (Staves)",
			"item": [
				{
					"name": "Get All Staves",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/staves/?skip=0&limit=100",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "staves", ""],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Retrieve all data source staves with pagination"
					},
					"response": []
				},
				{
					"name": "Get Stave by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/staves/{{stave_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "staves", "{{stave_id}}"]
						},
						"description": "Retrieve a specific data source stave by ID"
					},
					"response": []
				},
				{
					"name": "Create New Stave",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"PostgreSQL Production DB\",\n  \"description\": \"Main production database for user data\",\n  \"connection_string\": \"postgresql://user:pass@localhost:5432/prod_db\",\n  \"type\": \"postgresql\",\n  \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/staves/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "staves", ""]
						},
						"description": "Create a new data source stave"
					},
					"response": []
				},
				{
					"name": "Update Stave",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated PostgreSQL Production DB\",\n  \"description\": \"Updated description for production database\",\n  \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/staves/{{stave_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "staves", "{{stave_id}}"]
						},
						"description": "Update an existing data source stave"
					},
					"response": []
				},
				{
					"name": "Delete Stave",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/staves/{{stave_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "staves", "{{stave_id}}"]
						},
						"description": "Delete a data source stave"
					},
					"response": []
				}
			],
			"description": "Data source management endpoints (staves)"
		},
		{
			"name": "Rule Sets (Clefs)",
			"item": [
				{
					"name": "Get All Clefs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/clefs/?skip=0&limit=100",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "clefs", ""],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Retrieve all rule set clefs with pagination"
					},
					"response": []
				},
				{
					"name": "Get Clef by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/clefs/{{clef_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "clefs", "{{clef_id}}"]
						},
						"description": "Retrieve a specific rule set clef by ID"
					},
					"response": []
				},
				{
					"name": "Create New Clef",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Row Count Validation\",\n  \"description\": \"Validate that table row counts are within expected ranges\",\n  \"stave_id\": \"{{stave_id}}\",\n  \"rule_type\": \"row_count\",\n  \"parameters\": {\n    \"min_rows\": 1000,\n    \"max_rows\": 1000000\n  },\n  \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/clefs/",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "clefs", ""]
						},
						"description": "Create a new rule set clef"
					},
					"response": []
				},
				{
					"name": "Update Clef",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Row Count Validation\",\n  \"description\": \"Updated description for row count validation\",\n  \"parameters\": {\n    \"min_rows\": 500,\n    \"max_rows\": 2000000\n  },\n  \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/clefs/{{clef_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "clefs", "{{clef_id}}"]
						},
						"description": "Update an existing rule set clef"
					},
					"response": []
				},
				{
					"name": "Delete Clef",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/clefs/{{clef_id}}",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "clefs", "{{clef_id}}"]
						},
						"description": "Delete a rule set clef"
					},
					"response": []
				}
			],
			"description": "Rule set management endpoints (clefs)"
		},
		{
			"name": "Data Quality Checks",
			"item": [
				{
					"name": "Run Check",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parameters\": {\n    \"table_name\": \"users\",\n    \"check_type\": \"row_count\"\n  },\n  \"metadata\": {\n    \"description\": \"Daily row count check for users table\",\n    \"tags\": [\"daily\", \"users\"]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/checks/{{clef_id}}/run",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "checks", "{{clef_id}}", "run"]
						},
						"description": "Execute a data quality check for a specific rule set"
					},
					"response": []
				},
				{
					"name": "Get Check History",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/checks/history?skip=0&limit=100",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "checks", "history"],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "Retrieve check execution history with pagination"
					},
					"response": []
				}
			],
			"description": "Data quality check execution and history endpoints"
		},
		{
			"name": "Metrics & Dashboard",
			"item": [
				{
					"name": "Get Dashboard Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/metrics/dashboard",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "metrics", "dashboard"]
						},
						"description": "Retrieve dashboard metrics and overview statistics"
					},
					"response": []
				},
				{
					"name": "Metrics Health Check",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/metrics/health",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "metrics", "health"]
						},
						"description": "Check metrics service health status"
					},
					"response": []
				}
			],
			"description": "Metrics and dashboard data endpoints"
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "Get System Health Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/health?days=7",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reports", "health"],
							"query": [
								{
									"key": "days",
									"value": "7"
								}
							]
						},
						"description": "Generate system health report for specified number of days"
					},
					"response": []
				},
				{
					"name": "Get Summary Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/summary?days=7",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reports", "summary"],
							"query": [
								{
									"key": "days",
									"value": "7"
								}
							]
						},
						"description": "Generate summary report with aggregated metrics"
					},
					"response": []
				},
				{
					"name": "Get Checks Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/checks?days=7",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reports", "checks"],
							"query": [
								{
									"key": "days",
									"value": "7"
								}
							]
						},
						"description": "Generate detailed checks report for specified period"
					},
					"response": []
				},
				{
					"name": "Get Anomalies Report",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/reports/anomalies?days=7",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "reports", "anomalies"],
							"query": [
								{
									"key": "days",
									"value": "7"
								}
							]
						},
						"description": "Generate detailed anomalies report for specified period"
					},
					"response": []
				}
			],
			"description": "Reporting and analytics endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set default headers for all requests",
					"pm.request.headers.add({\n    key: 'Accept',\n    value: 'application/json'\n});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test script for all requests",
					"pm.test(\"Status code is 200 or 201\", function () {\n    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\n});\n\npm.test(\"Response has JSON content\", function () {\n    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\n});\n\npm.test(\"Response time is less than 5000ms\", function () {\n    pm.expect(pm.response.responseTime).to.be.below(5000);\n});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "stave_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "clef_id",
			"value": "",
			"type": "string"
		}
	]
}
